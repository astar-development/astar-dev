@attribute [AllowAnonymous]

@using Microsoft.AspNetCore.Authorization
@using Microsoft.FluentUI.AspNetCore.Components.Icons.Regular
<div class="navmenu">
    <input type="checkbox" title="Menu expand/collapse toggle" id="navmenu-toggle" class="navmenu-icon"/>
    <label for="navmenu-toggle" class="navmenu-icon">
        <FluentIcon Value="@(new Size20.Navigation())" Color="Color.Fill"/>
    </label>
    <nav class="siteNavigation" aria-labelledby="main-menu">
        <FluentNavMenu Id="main-menu" Collapsible="true" Width="250" Title="Navigation menu" @bind-Expanded="_expanded" CustomToggle="true">
            <FluentNavLink Href="/" Match="NavLinkMatch.All" Icon="@(new Size20.Home())" IconColor="Color.Accent">Home</FluentNavLink>
            <FluentNavLink Href="counter" Icon="@(new Size20.NumberSymbolSquare())" IconColor="Color.Accent">Counter</FluentNavLink>
            <FluentNavLink Href="weather" Icon="@(new Size20.WeatherPartlyCloudyDay())" IconColor="Color.Accent">Weather</FluentNavLink>
            <FluentNavLink Href="nuget-documentation" Icon="@(new Size20.Document())" IconColor="Color.Accent">NuGet Documentation</FluentNavLink>
            <FluentNavLink Href="kids-games" Icon="@(new Size20.Games())" IconColor="Color.Accent">Kids Games</FluentNavLink>

            @if (!_isAuthenticated)
            {
                <FluentNavLink Href="MicrosoftIdentity/Account/SignIn" Icon="@(new Size20.SignOut())" IconColor="Color.Accent">Sign in</FluentNavLink>
            }
            else
            {
                <FluentNavLink Href="MicrosoftIdentity/Account/SignOut" Icon="@(new Size20.SignOut())" IconColor="Color.Accent">Sign out, @_firstName</FluentNavLink>
            }
        </FluentNavMenu>
    </nav>
</div>
