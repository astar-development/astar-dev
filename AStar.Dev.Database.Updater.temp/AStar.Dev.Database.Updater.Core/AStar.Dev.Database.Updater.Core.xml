<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AStar.Dev.Database.Updater.Core</name>
    </assembly>
    <members>
        <member name="T:AStar.Dev.Database.Updater.Core.Files.AddNewFilesService">
            <summary>
                The
                <see cref="T:AStar.Dev.Database.Updater.Core.Files.NewFilesBackgroundService"/>
                class
            </summary>
            <param name="filesApiClient">The
                <see cref="T:AStar.Dev.Files.Api.Client.Sdk.FilesApi.FilesApiClient"/>
                required by the AddNewFilesBackgroundService
            </param>
            <param name="fileSystem">An instance of
                <see cref="T:System.IO.Abstractions.IFileSystem"/>
                to retrieve the files from
            </param>
            <param name="config">An instance of the
                <see cref="T:AStar.Dev.Database.Updater.Core.Models.DatabaseUpdaterConfiguration"/>
                options used to configure the addition of the new files
            </param>
            <param name="logger">An instance of the
                <see cref="T:Microsoft.Extensions.Logging.ILogger"/>
                to log status / errors
            </param>
        </member>
        <member name="M:AStar.Dev.Database.Updater.Core.Files.AddNewFilesService.#ctor(AStar.Dev.Files.Api.Client.Sdk.FilesApi.FilesApiClient,System.IO.Abstractions.IFileSystem,Microsoft.Extensions.Options.IOptions{AStar.Dev.Database.Updater.Core.Models.DatabaseUpdaterConfiguration},Microsoft.Extensions.Logging.ILogger{AStar.Dev.Database.Updater.Core.Files.NewFilesBackgroundService})">
            <summary>
                The
                <see cref="T:AStar.Dev.Database.Updater.Core.Files.NewFilesBackgroundService"/>
                class
            </summary>
            <param name="filesApiClient">The
                <see cref="T:AStar.Dev.Files.Api.Client.Sdk.FilesApi.FilesApiClient"/>
                required by the AddNewFilesBackgroundService
            </param>
            <param name="fileSystem">An instance of
                <see cref="T:System.IO.Abstractions.IFileSystem"/>
                to retrieve the files from
            </param>
            <param name="config">An instance of the
                <see cref="T:AStar.Dev.Database.Updater.Core.Models.DatabaseUpdaterConfiguration"/>
                options used to configure the addition of the new files
            </param>
            <param name="logger">An instance of the
                <see cref="T:Microsoft.Extensions.Logging.ILogger"/>
                to log status / errors
            </param>
        </member>
        <member name="M:AStar.Dev.Database.Updater.Core.Files.AddNewFilesService.StartAsync(System.Threading.CancellationToken)">
            <summary>
                The StartAsync method is called by the runtime and will update the database with any new files
            </summary>
            <param name="stoppingToken">A cancellation token to optionally cancel the operation</param>
        </member>
        <member name="T:AStar.Dev.Database.Updater.Core.Files.ClassificationMappingExtensions">
            <summary>
                The
                <see cref="T:AStar.Dev.Database.Updater.Core.Files.ClassificationMappingExtensions"/>
                containing the ClassificationMapping extensions
            </summary>
        </member>
        <member name="T:AStar.Dev.Database.Updater.Core.Files.ClassificationsMapper">
            <summary>
                The
                <see cref="T:AStar.Dev.Database.Updater.Core.Files.ClassificationsMapper"/>
                that handles adding any new file > database classifications
            </summary>
            <param name="config"></param>
            <param name="logger"></param>
            <remarks>Before we can progress to testing this, we need to change the ClassificationsMapper to be more testable</remarks>
        </member>
        <member name="M:AStar.Dev.Database.Updater.Core.Files.ClassificationsMapper.#ctor(Microsoft.Extensions.Options.IOptions{AStar.Dev.Database.Updater.Core.Models.DatabaseUpdaterConfiguration},Microsoft.Extensions.Logging.ILogger{AStar.Dev.Database.Updater.Core.Files.ClassificationsMapper})">
            <summary>
                The
                <see cref="T:AStar.Dev.Database.Updater.Core.Files.ClassificationsMapper"/>
                that handles adding any new file > database classifications
            </summary>
            <param name="config"></param>
            <param name="logger"></param>
            <remarks>Before we can progress to testing this, we need to change the ClassificationsMapper to be more testable</remarks>
        </member>
        <member name="M:AStar.Dev.Database.Updater.Core.Files.ClassificationsMapper.LoadClassificationMappings">
            <summary>
                The LoadClassificationMappings does exactly what its name says
            </summary>
            <returns>An instance of
                <see cref="T:AStar.Dev.Functional.Extensions.Result`2"/>
                to denote the success / failure of the load
            </returns>
        </member>
        <member name="T:AStar.Dev.Database.Updater.Core.Files.NewFilesBackgroundService">
            <summary>
                The
                <see cref="T:AStar.Dev.Database.Updater.Core.Files.NewFilesBackgroundService"/>
                class
            </summary>
            <param name="addNewFilesService">The
                <see cref="T:AStar.Dev.Database.Updater.Core.Files.AddNewFilesService"/>
                required by the AddNewFilesBackgroundService
            </param>
            <param name="timeDelay">An instance of
                <see cref="T:AStar.Dev.Database.Updater.Core.Services.TimeDelay"/>
                to control the start time of the process
            </param>
            <param name="config">An instance of the
                <see cref="T:AStar.Dev.Database.Updater.Core.Models.DatabaseUpdaterConfiguration"/>
                options used to configure the addition of the new files
            </param>
            <param name="logger">An instance of the
                <see cref="T:Microsoft.Extensions.Logging.ILogger"/>
                to log status / errors
            </param>
        </member>
        <member name="M:AStar.Dev.Database.Updater.Core.Files.NewFilesBackgroundService.#ctor(AStar.Dev.Database.Updater.Core.Files.AddNewFilesService,AStar.Dev.Database.Updater.Core.Services.TimeDelay,Microsoft.Extensions.Options.IOptions{AStar.Dev.Database.Updater.Core.Models.DatabaseUpdaterConfiguration},Microsoft.Extensions.Logging.ILogger{AStar.Dev.Database.Updater.Core.Files.NewFilesBackgroundService})">
            <summary>
                The
                <see cref="T:AStar.Dev.Database.Updater.Core.Files.NewFilesBackgroundService"/>
                class
            </summary>
            <param name="addNewFilesService">The
                <see cref="T:AStar.Dev.Database.Updater.Core.Files.AddNewFilesService"/>
                required by the AddNewFilesBackgroundService
            </param>
            <param name="timeDelay">An instance of
                <see cref="T:AStar.Dev.Database.Updater.Core.Services.TimeDelay"/>
                to control the start time of the process
            </param>
            <param name="config">An instance of the
                <see cref="T:AStar.Dev.Database.Updater.Core.Models.DatabaseUpdaterConfiguration"/>
                options used to configure the addition of the new files
            </param>
            <param name="logger">An instance of the
                <see cref="T:Microsoft.Extensions.Logging.ILogger"/>
                to log status / errors
            </param>
        </member>
        <member name="M:AStar.Dev.Database.Updater.Core.Files.NewFilesBackgroundService.ExecuteAsync(System.Threading.CancellationToken)">
            <summary>
                The StartAsync method is called by the runtime and will update the database with any new files
            </summary>
            <param name="stoppingToken">A cancellation token to optionally cancel the operation</param>
        </member>
        <member name="T:AStar.Dev.Database.Updater.Core.Models.ApiConfiguration">
            <summary>
            </summary>
        </member>
        <member name="F:AStar.Dev.Database.Updater.Core.Models.ApiConfiguration.SectionLocation">
            <summary>
            </summary>
        </member>
        <member name="P:AStar.Dev.Database.Updater.Core.Models.ApiConfiguration.Directories">
            <summary>
            </summary>
        </member>
        <member name="P:AStar.Dev.Database.Updater.Core.Models.ApiConfiguration.FilesApiConfiguration">
            <summary>
            </summary>
        </member>
        <member name="M:AStar.Dev.Database.Updater.Core.Models.ApiConfiguration.ToString">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="T:AStar.Dev.Database.Updater.Core.Models.ClassificationMapping">
            <summary>
                The
                <see cref="T:AStar.Dev.Database.Updater.Core.Models.ClassificationMapping"/>
                class
            </summary>
        </member>
        <member name="P:AStar.Dev.Database.Updater.Core.Models.ClassificationMapping.FileNameContains">
            <summary>
                Gets or sets a section of text that should exist in the filename for this mapping to apply
            </summary>
        </member>
        <member name="P:AStar.Dev.Database.Updater.Core.Models.ClassificationMapping.DatabaseMapping">
            <summary>
                Gets or sets the text to store in the database for this mapping
            </summary>
        </member>
        <member name="P:AStar.Dev.Database.Updater.Core.Models.ClassificationMapping.Celebrity">
            <summary>
                Gets or sets whether this mapping is for someone no-one knows... joke!
            </summary>
        </member>
        <member name="T:AStar.Dev.Database.Updater.Core.Models.DatabaseUpdaterConfiguration">
            <summary>
                The
                <see cref="T:AStar.Dev.Database.Updater.Core.Models.DatabaseUpdaterConfiguration"/>
                containing the applicable Database Updater configuration
            </summary>
        </member>
        <member name="F:AStar.Dev.Database.Updater.Core.Models.DatabaseUpdaterConfiguration.ConfigurationSectionName">
            <summary>
                Gets the name of the configuration section as specified in the appSettings.json
            </summary>
        </member>
        <member name="P:AStar.Dev.Database.Updater.Core.Models.DatabaseUpdaterConfiguration.RootDirectory">
            <summary>
                Gets or sets the Root directory - where the updater will start looking for files
            </summary>
        </member>
        <member name="P:AStar.Dev.Database.Updater.Core.Models.DatabaseUpdaterConfiguration.MappingsFilePath">
            <summary>
                Gets or sets the full path (including the name) of the CSV Mappings file
            </summary>
        </member>
        <member name="P:AStar.Dev.Database.Updater.Core.Models.DatabaseUpdaterConfiguration.SoftDeleteScheduledTime">
            <summary>
                Gets or sets the time to start the soft-deletion
            </summary>
        </member>
        <member name="P:AStar.Dev.Database.Updater.Core.Models.DatabaseUpdaterConfiguration.HardDeleteScheduledTime">
            <summary>
                Gets or sets the time to start the hard-deletion
            </summary>
        </member>
        <member name="P:AStar.Dev.Database.Updater.Core.Models.DatabaseUpdaterConfiguration.NewFilesScheduledTime">
            <summary>
                Gets or sets the time to start the new files addition
            </summary>
        </member>
        <member name="T:AStar.Dev.Database.Updater.Core.Models.DirectoryChange">
            <summary>
                The
                <see cref="T:AStar.Dev.Database.Updater.Core.Models.DirectoryChange"/>
                to control the directory change
            </summary>
            <param name="Old">The name of the old directory</param>
            <param name="New">The name of the new directory</param>
        </member>
        <member name="M:AStar.Dev.Database.Updater.Core.Models.DirectoryChange.#ctor(System.String,System.String)">
            <summary>
                The
                <see cref="T:AStar.Dev.Database.Updater.Core.Models.DirectoryChange"/>
                to control the directory change
            </summary>
            <param name="Old">The name of the old directory</param>
            <param name="New">The name of the new directory</param>
        </member>
        <member name="P:AStar.Dev.Database.Updater.Core.Models.DirectoryChange.Old">
            <summary>The name of the old directory</summary>
        </member>
        <member name="P:AStar.Dev.Database.Updater.Core.Models.DirectoryChange.New">
            <summary>The name of the new directory</summary>
        </member>
        <member name="M:AStar.Dev.Database.Updater.Core.Models.DirectoryChange.ToString">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="T:AStar.Dev.Database.Updater.Core.Models.DirectoryChanges">
            <summary>
                The
                <see cref="T:AStar.Dev.Database.Updater.Core.Models.DirectoryChanges"/>
                used to contain the list of available directories - not sure if this will be used
            </summary>
        </member>
        <member name="F:AStar.Dev.Database.Updater.Core.Models.DirectoryChanges.SectionLocation">
            <summary>
            </summary>
        </member>
        <member name="P:AStar.Dev.Database.Updater.Core.Models.DirectoryChanges.Directories">
            <summary>
            </summary>
        </member>
        <member name="M:AStar.Dev.Database.Updater.Core.Models.DirectoryChanges.ToString">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="T:AStar.Dev.Database.Updater.Core.Services.TimeDelay">
            <summary>
                The
                <see cref="T:AStar.Dev.Database.Updater.Core.Services.TimeDelay"/>
                class
            </summary>
        </member>
        <member name="M:AStar.Dev.Database.Updater.Core.Services.TimeDelay.CalculateDelayToNextRun(System.TimeOnly)">
            <summary>
                The CalculateDelayToNextRun will return the
                <see cref="T:System.TimeSpan"/>
                reresenting the delay until the next scheduled run time
            </summary>
            <param name="targetTime">The target time to delay until</param>
            <returns>The
                <see cref="T:System.TimeSpan"/>
                reresenting the delay until the next scheduled run time
            </returns>
        </member>
    </members>
</doc>
